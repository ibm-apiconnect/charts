apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "dynamic-gateway-service.fullname" . }}
  labels:
    app: {{ template "dynamic-gateway-service.name" . }}
    chart: {{ template "dynamic-gateway-service.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "dynamic-gateway-service.fullname" . }}
  replicas: {{ .Values.datapower.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "dynamic-gateway-service.name" . }}
      release: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        webGUIPort: {{ .Values.datapower.webGuiManagementPort | quote }}
        sshPort: {{ .Values.datapower.gatewaySshPort | quote }}
        restPort: {{ .Values.datapower.restManagementPort | quote }}
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/snmp'
        prometheus.io/port: '63512'
        prometheus.io/target: '127.0.0.1:{{ .Values.datapower.snmpPort }}'
        prometheus.io/module: 'dpStatusMIB'
{{- $licenseVersion := quote .Values.datapower.licenseVersion -}}
  {{- if eq (include "datapower-requirements.validLicenseVersion" .) "true" }}
        productFlexpointBundle: "{{ .Values.datapower.flexpointBundle }}"
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productVersion: "{{ .Values.datapower.image.tag }}"
    {{- if eq $licenseVersion ("Production" | quote) }}
        productName: 'IBM DataPower Gateway Virtual Edition for Production'
        productID: '887a7b80dd7b40c9b978ff085230604e'
        productChargedContainers: "{{ .Chart.Name }}"
    {{- else if eq $licenseVersion ("Nonproduction" | quote) }}
        productName: 'IBM DataPower Gateway Virtual Edition for Nonproduction'
        productID: 'bd624448e8484592879f2e1a950686bd'
        productChargedContainers: "{{ .Chart.Name }}"
    {{- else }}
        productName: 'IBM DataPower Gateway Virtual Edition for Developers'
        productID: 'IBMDataPowerGatewayVirtualEdition_{{ .Values.datapower.image.tag }}_Developers'
        productChargedContainers: ""
    {{- end }}
  {{- end }}
{{- if .Values.cip }}
        productCloudpakRatio: 1:1
        cloudpakName: IBM Cloud Pak for Integration
        cloudpakId: c8b82d189e7545f0892db9ef2731b90d
        cloudpakVersion: 2019.4.1
        icp4i.ibm.com/product: datapower
        icp4i.ibm.com/release: {{ .Release.Name }}
{{- end }}
      labels:
        app: {{ template "dynamic-gateway-service.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if (or .Values.datapower.image.pullSecrets .Values.cip) }}
      imagePullSecrets:
      {{- if .Values.datapower.image.pullSecrets }}
      {{- range .Values.datapower.image.pullSecrets }}
      - name: {{ .name }}
      {{- end }}
      {{- end }}
      {{- if .Values.cip }}
      - name: ibm-entitlement-key
      {{- end }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
{{- if eq .Values.datapower.gatewaySshState "enabled" }}
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 0
{{- else }}
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
{{- end }}
      affinity:
{{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 8 }}
{{- else }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "beta.kubernetes.io/arch"
                  operator: In
                  values: ["amd64"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ template "dynamic-gateway-service.name" . }}
                  release: {{ .Release.Name }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.datapower.image.repository }}:{{ .Values.datapower.image.tag }}"
          imagePullPolicy: {{ .Values.datapower.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
# Dynamically increase the user permissions of the DataPower container when SSH is enabled.
{{- if eq .Values.datapower.gatewaySshState "enabled" }}
            runAsNonRoot: false
            runAsUser: 0
            fsGroup: 0
{{- else }}
            runAsNonRoot: true
            runAsUser: 101
            fsGroup: 101
{{- end }}
            capabilities:
              drop:
              - ALL
# Add capabilities needed for SSH only when SSH is enabled
{{- if eq .Values.datapower.gatewaySshState "enabled" }}
              add:
              - SETGID
              - SETUID
              - SYS_CHROOT
              - DAC_OVERRIDE
{{- end }}
          command:
            - sh
            - -c
            - |
              sh /opt/ibm/datapower/init/scripts/init-dpm-check.sh
              cp -RL /opt/ibm/datapower/init/config/* /drouter/config
              mkdir -p /root/secure/usrcerts/apiconnect/gwd
              cp -RL /opt/ibm/datapower/init/apiconnect-gwd/* /root/secure/usrcerts/apiconnect/gwd/
{{- if .Values.datapower.adminUserSecret }}
              sh /opt/ibm/datapower/init/scripts/init-admin-user.sh
{{- end }}
{{- if .Values.datapower.additionalConfig }}
              sh /opt/ibm/datapower/init/scripts/custom-config-handler.sh
{{- end }}
{{- if .Values.datapower.additionalLocalTar }}
              sh /opt/ibm/datapower/init/scripts/unpack-local-files.sh
{{- end }}
{{- if .Values.datapower.additionalCerts }}
              sh /opt/ibm/datapower/init/scripts/additional-cert-handler.sh
{{- end }}
{{- if .Values.datapower.customDatapowerConfig }}
              cat /opt/ibm/datapower/init/custom-config/*.cfg > /drouter/config/apiconnect/custom-config.cfg
{{- end }}
{{/* If SSH is enabled, DP runs as root. Only chown if SSH is not enabled */}}
{{- if ne .Values.datapower.gatewaySshState "enabled" }}
              chown -R 101:101 /drouter/config/* /root/secure/usrcerts/apiconnect
{{- end }}
              chmod -R 0777 /drouter/config/* /root/secure/usrcerts/apiconnect
{{- if eq (include "datapower-requirements.satisfied" .) "true"}}
              set -x
              export $(env | grep ^DATAPOWER_ | cut -d= -f1)
              sh /start/migrate-tms-pv.sh
              /root/node /start/gateway-peering.js
              /root/node /start/syslog-tcp.js
              exec /start.sh --log-format {{ .Values.datapower.env.defaultLogFormat }}
{{- else }}
              sh /start/dp-requirement-error.sh
              exit 1
{{- end }}
          stdin: true
          tty: true
          env:
            - name: DPM_FQDN
              value: "{{ .Release.Name }}-dpm-svc.{{ .Release.Namespace }}.svc.cluster.local"
            - name: DPM_LIVENESS_PORT
              value: {{ .Values.datapowerMonitor.livenessPort | default 8080 | quote }}
{{- if eq (include "datapower-requirements.satisfied" .) "false"}}
            - name: DP_REQ_VALID_LICENSE_VERSION
              value: "{{ template "datapower-requirements.validLicenseVersion" . }}"
            - name: DP_REQ_VALID_DPM_IMAGE_SET
              value: "{{ template "datapower-requirements.dpmImageSet" . }}"
            - name: DP_REQ_HP_PEERING_OPTION_SET
              value: "{{ template "datapower-requirements.hpPeeringOptionSet" . }}"
{{- end }}
            - name: APICONNECT_K8S_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: APICONNECT_K8S_PEERS_SVC_NAME
              value: {{ template "dynamic-gateway-service.fullname" . }}
            - name: APICONNECT_V5_COMPAT_MODE
{{/* Enforce valid values for apicGatewayServiceV5CompatibilityMode as 'on' and 'off' (default: 'on') */}}
{{- if .Values.datapower.apicGatewayServiceV5CompatibilityMode }}
{{- if eq .Values.datapower.apicGatewayServiceV5CompatibilityMode "off" }}
              value: "off"
{{- else }}
              value: "on"
{{- end }}
{{- else }}
              value: "on"
{{- end }}
            - name: APICONNECT_ENABLE_TMS
{{/* Enforce valid values for enableTMS as 'on' and 'off' (default: 'off') */}}
{{- if eq (.Values.datapower.env.enableTMS | default "off") "on" }}
              value: "on"
{{- else }}
              value: "off"
{{- end }}
            - name: APICONNECT_API_DEBUG_PROBE
{{/* Enforce valid values for apiDebugProbe as 'enabled' and 'disabled' (default: 'disabled') */}}
{{- if eq (.Values.datapower.apiDebugProbe | default "disabled") "enabled" }}
              value: "enabled"
{{- else }}
              value: "disabled"
{{- end }}
{{- if and (eq (.Values.datapower.apicGatewayServiceV5CompatibilityMode | default "on") "off") (eq (.Values.datapower.env.highPerformancePeering | default "") "on") }}
            - name: APICONNECT_DEDICATED_RL_PEERING
              value: "on"
            - name: APICONNECT_DEDICATED_SUBS_PEERING
              value: "on"
{{- else }}
            - name: APICONNECT_DEDICATED_RL_PEERING
              value: "off"
            - name: APICONNECT_DEDICATED_SUBS_PEERING
              value: "off"
{{- end }}
            - name: "DATAPOWER_SYSLOG_TCP_STATE"
{{/* Enforce valid values for syslogState as 'enabled' and 'disabled' (default: 'disabled') */}}
{{- if eq (.Values.datapower.env.syslogState | default "disabled") "enabled" }}
              value: "enabled"
{{- else }}
              value: "disabled"
{{- end }}
            - name: "DATAPOWER_SYSLOG_TCP_REMOTE_HOST"
              value: {{ .Values.datapower.env.syslogRemoteHost | quote }}
            - name: "DATAPOWER_SYSLOG_TCP_REMOTE_PORT"
              value: {{ .Values.datapower.env.syslogRemotePort | quote }}
            - name: "DATAPOWER_SYSLOG_TCP_TLS_SECRET"
              value: {{ .Values.datapower.env.syslogTLSSecret | quote }}
            - name: GATEWAY_PEERING_MONITOR_PORT
              value: {{ .Values.datapower.gatewayPeeringMonitorPort | quote }}
            - name: GATEWAY_PEERING_LOCAL_PORT
              value: {{ .Values.datapower.gatewayPeeringLocalPort | quote }}
            - name: GATEWAY_PEERING_ENABLE_SSL
              value: {{ .Values.datapower.env.peeringEnableSSL | quote }}
            - name: TMS_PEERING_MONITOR_PORT
              value: {{ .Values.datapower.tmsPeeringMonitorPort | quote }}
            - name: TMS_PEERING_LOCAL_PORT
              value: {{ .Values.datapower.tmsPeeringLocalPort | quote }}
            - name: TMS_PEERING_ENABLE_SSL
              value: {{ .Values.datapower.env.tmsPeeringEnableSSL | quote }}
            - name: ADP_PEERING_MONITOR_PORT
              value: {{ .Values.datapower.apiDebugProbePeeringMonitorPort | quote }}
            - name: ADP_PEERING_LOCAL_PORT
              value: {{ .Values.datapower.apiDebugProbePeeringLocalPort | quote }}
            - name: ADP_PEERING_ENABLE_SSL
              value: {{ .Values.datapower.env.apiDebugProbePeeringEnableSSL | quote }}
            - name: RL_PEERING_MONITOR_PORT
              value: {{ .Values.datapower.rlPeeringMonitorPort | quote }}
            - name: RL_PEERING_LOCAL_PORT
              value: {{ .Values.datapower.rlPeeringLocalPort | quote }}
            - name: RL_PEERING_ENABLE_SSL
              value: {{ .Values.datapower.env.peeringEnableSSL | quote }}
            - name: SUBS_PEERING_MONITOR_PORT
              value: {{ .Values.datapower.subsPeeringMonitorPort | quote }}
            - name: SUBS_PEERING_LOCAL_PORT
              value: {{ .Values.datapower.subsPeeringLocalPort | quote }}
            - name: SUBS_PEERING_ENABLE_SSL
              value: {{ .Values.datapower.env.peeringEnableSSL | quote }}
{{- if .Values.datapower.env.workerThreads }}
{{- if gt .Values.datapower.env.workerThreads 0.0 }}
            - name: DATAPOWER_WORKER_THREADS
              value: {{ .Values.datapower.env.workerThreads | quote }}
{{- end }}
{{- end }}
            - name: "DATAPOWER_ACCEPT_LICENSE"
              value: "true"
            - name: "DATAPOWER_LOG_COLOR"
              value: "false"
            - name: "DATAPOWER_INTERACTIVE"
              value: {{ .Values.datapower.env.interactive | quote }}
            - name: "DATAPOWER_LOG_LEVEL"
              value: {{ .Values.datapower.env.datapowerLogLevel | quote }}
            - name: "PEERING_LOG_LEVEL"
              value: {{ .Values.datapower.env.peeringLogLevel }}
            - name: "GWD_POLICY_DISABLE_LOG"
{{- if eq .Values.datapower.env.policyDisableLog "true" }}
              value: "true"
{{- else }}
              value: "false"
{{- end }}
            - name: "GWD_POLICY_DISABLE_XSLT"
{{- if eq .Values.datapower.env.policyDisableXSLT "true" }}
              value: "true"
{{- else }}
              value: "false"
{{- end }}
            - name: "GWD_POLICY_DISABLE_GATEWAYSCRIPT"
{{- if eq .Values.datapower.env.policyDisableGatewayScript "true" }}
              value: "true"
{{- else }}
              value: "false"
{{- end }}
            - name: "GWD_POLICY_DISABLE_RATELIMIT"
{{- if eq .Values.datapower.env.policyDisableRateLimit "true" }}
              value: "true"
{{- else }}
              value: "false"
{{- end }}
            - name: "DATAPOWER_ENABLE_OPENTRACING"
{{- if eq ( .Values.odTracing.enabled | default "false" ) "true" }}
              value: "true"
{{- else }}
              value: "false"
{{- end }}
{{- if .Values.cip }}
            - name: "DATAPOWER_IS_ICP4I"
              value: "true"
{{- end }}

          resources:
{{ toYaml .Values.datapower.resources | indent 12 }}
          ports:
            - containerPort: {{ .Values.datapower.gatewayPeeringLocalPort }}
              name: peer-local-port
            - containerPort: {{ .Values.datapower.gatewayPeeringMonitorPort }}
              name: peer-monit-port
            - containerPort: {{ .Values.datapower.rlPeeringLocalPort }}
              name: rl-local-port
            - containerPort: {{ .Values.datapower.rlPeeringMonitorPort }}
              name: rl-monit-port
            - containerPort: {{ .Values.datapower.subsPeeringLocalPort }}
              name: subs-local-port
            - containerPort: {{ .Values.datapower.subsPeeringMonitorPort }}
              name: subs-monit-port
            - containerPort: {{ .Values.datapower.tmsPeeringLocalPort }}
              name: tms-local-port
            - containerPort: {{ .Values.datapower.tmsPeeringMonitorPort }}
              name: tms-monit-port
            - containerPort: {{ .Values.datapower.apiDebugProbePeeringLocalPort }}
              name: adp-local-port
            - containerPort: {{ .Values.datapower.apiDebugProbePeeringMonitorPort }}
              name: adp-monit-port
            - containerPort: {{ .Values.datapower.apicGatewayServiceLocalPort }}
              name: apic-gw-mgmt
            - containerPort: {{ .Values.datapower.apiGatewayLocalPort }}
              name: api-gw-svc
            - containerPort: {{ .Values.datapower.gatewaySshPort }}
              name: ssh-port
            - containerPort: {{ .Values.datapower.webGuiManagementPort }}
              name: webgui-port
            - containerPort: {{ .Values.datapower.restManagementPort }}
              name: rmi-port
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /health
              port: apic-gw-mgmt
            initialDelaySeconds: 180
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 12
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /ready
              port: apic-gw-mgmt
            initialDelaySeconds: 120
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          volumeMounts:
            - name: init-volume
              mountPath: /opt/ibm/datapower/init
            - name: init-config-volume
              mountPath: /opt/ibm/datapower/init/config
            - name: init-config-apiconnect-volume
              mountPath: /opt/ibm/datapower/init/config/apiconnect
            - name: init-scripts-volume
              mountPath: /opt/ibm/datapower/init/scripts
            - name: init-certs-volume
              mountPath: /opt/ibm/datapower/init/apiconnect-gwd
            - name: root-secure-usrcerts-volume
              mountPath: /root/secure/usrcerts
{{- if .Values.datapower.adminUserSecret }}
            - name: init-admin-user-secret
              mountPath: /opt/ibm/datapower/init/admin-user-secret
{{- end }}
{{- if .Values.datapower.customDatapowerConfig }}
            - name: init-custom-config-volume
              mountPath: /opt/ibm/datapower/init/custom-config
{{- end }}
            - name: start-volume
              mountPath: /start
            - name: drouter-config-volume
              mountPath: /drouter/config
{{- if .Values.datapower.env.syslogTLSSecret }}
            - name: root-secure-usrcerts-apiconnect-syslog-volume
              mountPath: /root/secure/usrcerts/apiconnect/syslog
{{- end }}
{{- if .Values.datapower.apimVeloxCertsSecret }}
            - name: root-secure-usrcerts-apiconnect-apim-volume
              mountPath: /root/secure/usrcerts/apiconnect/apim
{{- end }}
            - name: drouter-ramdisk2-volume
              mountPath: /drouter/ramdisk2
            - name: drouter-ramdisk2-mnt-volume
              mountPath: /drouter/ramdisk2/mnt
            - name: drouter-ramdisk2-mnt-raid-volume
              mountPath: /drouter/ramdisk2/mnt/raid-volume
            - name: drouter-temporary-volume
              mountPath: /drouter/temporary
{{- if eq (.Values.datapower.env.enableTMS | default "off") "on" }}
            - name: tms
              mountPath: /drouter/ramdisk2/mnt/raid-volume/raid0
{{- end }}
{{- if .Values.datapower.additionalLocalTar }}
            - name: init-additional-local-volume
              mountPath: /opt/ibm/datapower/init/additional-local
            - name: drouter-local-volume
              mountPath: /drouter/local
{{- end }}
{{- if .Values.datapower.additionalCerts }}
{{- range .Values.datapower.additionalCerts }}
            - name: {{ .secret }}-volume
              mountPath: /opt/ibm/datapower/init/certs/{{ .domain }}/{{ .secret }}
{{- end }}
{{- end }}
{{- if .Values.datapower.additionalConfig }}
            - name: init-additional-config-volume
              mountPath: /opt/ibm/datapower/init/additional-config
{{- end }}
{{- if eq (.Values.odTracing.enabled | default "false") "true" }}
            - name: icp4i-od-jaeger-client
              mountPath: /opt/ibm/datapower/opentracing
{{- end }}
{{- if eq ( .Values.odTracing.enabled | default "false" ) "true" }}
        # sidecar - od agent
        - name: od-tracing-agent
          image: {{ .Values.odTracing.imageAgent }}
          imagePullPolicy: {{ .Values.odTracing.pullPolicy }}
          volumeMounts:
            - name: icp4i-od-ca-certificate
              mountPath: "/usr/share/jaeger/ca/certs"
          command: ["/go/bin/agent-linux"]
          args:
            - "--jaeger.tags=sourceNamespace={{ .Release.Namespace }}"
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
          env:
            - name: COLLECTOR_HOST_PORT
              value : {{ template "odTracing.collector.host-port" . }}
            - name: REPORTER_TYPE
              value : "grpc"
            - name: REPORTER_GRPC_HOST_PORT
              value : {{ template "odTracing.collector.grpc-host-port" . }}
            - name: REPORTER_GRPC_TLS
              value : "false"
            - name: OD_SOURCE_NAMESPACE
              value : {{ .Release.Namespace }}
            - name: ES_TLS_CA
              value: '/usr/share/jaeger/ca/certs/icp4i-od-cacert.pem'
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 256m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          readinessProbe:
            httpGet:
              path: /?service=health
              port: 5778
            initialDelaySeconds: {{ .Values.odTracing.agent.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.odTracing.agent.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.odTracing.agent.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.odTracing.agent.readinessProbe.failureThreshold }}
          livenessProbe:
            tcpSocket:
              port: 5778
            initialDelaySeconds: {{ .Values.odTracing.agent.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.odTracing.agent.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.odTracing.agent.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.odTracing.agent.livenessProbe.failureThreshold }}
           # sidecar - od collector
        - name: od-tracing-collector
          image: {{ .Values.odTracing.imageCollector }}
          imagePullPolicy: {{ .Values.odTracing.pullPolicy }}
          volumeMounts:
            - name: icp4i-od-ca-certificate
              mountPath: "/usr/share/jaeger/ca/certs"
          ports:
            - containerPort: 14250
              name: grpc
              protocol: TCP
            - containerPort: 14267
              name: tchannel
              protocol: TCP
            - containerPort: 14268
              name: http
              protocol: TCP
            - containerPort: 14269
              name: healthcheck
              protocol: TCP
            - containerPort: 9411
              name: zipkin
              protocol: TCP
            - containerPort: 14987
              name: liveliness
              protocol: TCP
          env:
            - name: SPAN_STORAGE_TYPE
              value: elasticsearch
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "odTracing.collector.elasticsearch-secret-name" . }}
                  key: password
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "odTracing.collector.elasticsearch-secret-name" . }}
                  key: username
            - name: ES_SERVER_URLS
              value: {{ template "odTracing.collector.elasticsearch-url" . }}
            - name: ES_TLS_CA
              value: '/usr/share/jaeger/ca/certs/icp4i-od-cacert.pem'
            - name: COLLECTOR_PORT
              value: "14267"
            - name: COLLECTOR_HTTP_PORT
              value: "14268"
            - name: COLLECTOR_ZIPKIN_HTTP_PORT
              value: "9411"
            - name: COLLECTOR_GRPC_TLS
              value: "false"
          securityContext:
            capabilities:
              drop:
              - ALL
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 256m
              memory: 128Mi
           # Set liveness probe to determine collector is running
          readinessProbe:
            httpGet:
              port: 14269
            initialDelaySeconds: {{ .Values.odTracing.collector.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.odTracing.collector.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.odTracing.collector.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.odTracing.collector.readinessProbe.failureThreshold }}
          livenessProbe:
            tcpSocket:
              port: 14987
            initialDelaySeconds: {{ .Values.odTracing.collector.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.odTracing.collector.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.odTracing.collector.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.odTracing.collector.livenessProbe.failureThreshold }}
{{- end }}
      volumes:
        - name: init-volume
          emptyDir: {}
        - name: init-config-volume
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-init-config
        - name: init-config-apiconnect-volume
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-init-config-apic
        - name: init-scripts-volume
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-static-init-scripts
        - name: init-certs-volume
          secret:
            secretName: {{ .Values.datapower.apicGatewayServiceTLSSecret }}
{{- if .Values.datapower.adminUserSecret }}
        - name: init-admin-user-secret
          secret:
            secretName: {{ .Values.datapower.adminUserSecret }}
{{- end }}
{{- if .Values.datapower.customDatapowerConfig }}
        - name: init-custom-config-volume
          configMap:
            name: {{ .Values.datapower.customDatapowerConfig }}
{{- end }}
        - name: start-volume
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-static-start-scripts
        - name: drouter-config-volume
          emptyDir: {}
        - name: drouter-ramdisk2-volume
          emptyDir:
            medium: ""
        - name: drouter-ramdisk2-mnt-volume
          emptyDir:
            medium: ""
        - name: drouter-ramdisk2-mnt-raid-volume
          emptyDir:
            medium: ""
        - name: drouter-temporary-volume
          emptyDir:
            medium: ""
        - name: root-secure-usrcerts-volume
          emptyDir: {}
{{- if .Values.datapower.env.syslogTLSSecret }}
        - name: root-secure-usrcerts-apiconnect-syslog-volume
          secret:
            secretName: {{ .Values.datapower.env.syslogTLSSecret }}
{{- end }}
{{- if .Values.datapower.apimVeloxCertsSecret }}
        - name: root-secure-usrcerts-apiconnect-apim-volume
          secret:
            secretName: {{ .Values.datapower.apimVeloxCertsSecret }}
{{- end }}
{{- if .Values.datapower.additionalConfig }}
        - name: init-additional-config-volume
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-custom-config
{{- end }}
{{- if .Values.datapower.additionalLocalTar }}
        - name: init-additional-local-volume
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-local-files
        - name: drouter-local-volume
          emptyDir: {}
{{- end }}
{{- if .Values.datapower.additionalCerts }}
{{- range .Values.datapower.additionalCerts }}
        - name: {{ .secret }}-volume
          secret:
            secretName: {{ .secret }}
{{- end }}
{{- end }}
{{- if eq ( .Values.odTracing.enabled | default "false" ) "true" }}
        - name: icp4i-od-ca-certificate
          secret:
            secretName: {{ template "odTracing.collector.elasticsearch-secret-name" . }}
            optional: true
        - name: icp4i-od-jaeger-client
          configMap:
            name: {{ template "dynamic-gateway-service.fullname" . }}-static-jaeger-client
{{- end }}
{{- if eq (.Values.datapower.env.enableTMS | default "off") "on" }}
  volumeClaimTemplates:
  - metadata:
      name: tms
      labels:
        app: {{ template "dynamic-gateway-service.fullname" . }}
        release: {{ .Release.Name }}
    spec:
{{ toYaml .Values.datapower.storage.tmsPeering | indent 6 }}
{{- end }}
