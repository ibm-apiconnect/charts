# Default values for dynamic-gateway-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#-----------------------------------------------------------------------------
# gateway section
#
datapower:
  # License version of DataPower. MUST be included to deploy.
  # Accepts Developers, Production, and Nonproduction.
  licenseVersion:
  image:
    repository: ibmcom/datapower
    tag: 2018.4.1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: datapower-pull-secrets
  busybox:
    repository: busybox
    tag: 1.29-glibc
    pullPolicy: IfNotPresent
  env:
    # Should agree with .Values.requests.cpu if set. If not set or is 0 the env var will not be set.
    workerThreads:
    # interactive should be true or false
    interactive: true
    # Should be on or off
    peeringEnableSSL: "on"
    # Should be on or off
    apiDebugProbePeeringEnableSSL: "on"
    # Should be on or off
    tmsPeeringEnableSSL: "on"
    # Should be on or off
    enableTMS: "off"

    # High-performance Peering
    # Should be on or off. No default should be set, users MUST declare one way or another
    highPerformancePeering:

    # peeringLogLevel sets log level for gateway-peering operation. Should only be internal, warning, notice, verbose, or debug.
    peeringLogLevel: "internal"
    # Format type for logging. Can be json-icp, text, raw, csv, cbe, or xml
    # For ICP deployments, this format must be 'json-icp'
    defaultLogFormat: "text"
    # Log level for DataPower. Should be 0-7
    datapowerLogLevel: "3"
    # Set to "true" if the log policy shold be disabled
    policyDisableLog: "false"
    # Set to "true" if the xslt policy shold be disabled
    policyDisableXSLT: "false"
    # Set to "true" if the gatewayscript policy shold be disabled
    policyDisableGatewayScript: "false"
    # Set to "true" if the ratelimit policy shold be disabled
    policyDisableRateLimit: "false"
  # In order to replace the default admin credentials, the new credentials should be configured via Secret and `.Values.datapower.adminUserSecret` must be set to the name of
  # the Secret containing the admin user's credentials
  #
  # The following are properties which can be used to define the admin user's credentials:
  # - `password-hashed`: The hashed value (see Linux `man 3 crypt` for format) of the admin user's password. Required if `password` is not defined.
  # - `password`: The admin user's password. Required if `password-hashed` is not defined; ignored if `password-hashed` is defined.
  # - `salt`: The salt value used when hashing `password` (see `man 3 crypt`). Optional; ignored when `password-hashed` is defined. (Default: 12345678)
  # - `method`: The name of the hashing algorithm used to hash `password`. Valid options: md5, sha256. Optional; ignored when `password-hashed` is defined. (Default: md5)
  #
  # The following examples create Secrets with different values, but result in an admin user with the same credentials (and the same password hash)
  #   kubectl create secret generic admin-credentials --from-literal=password=helloworld --from-literal=salt=12345678 --from-literal=method=md5
  #   kubectl create secret generic admin-credentials --from-literal=password=helloworld
  #   kubectl create secret generic admin-credentials --from-literal=password-hashed='$1$12345678$8.nskQfP4gQ8tk5xw6Wa8/'
  #
  # These two examples also result in Secrets with different values but identical admin credentials
  #   kubectl create secret generic admin-credentials --from-literal=password=hunter2 --from-literal=salt=NaCl --from-literal=method=sha256
  #   kubectl create secret generic admin-credentials --from-literal=password-hashed='$5$NaCl$aOrRVimQNvZ2ZLjnAyMvT3WgaUEXoWgwkgyBrhwIg04'
  #
  # Notice that, when setting `password-hashed`, the value must be surrounded by single-quotes
  #
  # In all of the examples above, `.Values.datapower.adminUserSecret` should be set to 'admin-credentials' for the admin user to be configured.
  adminUserSecret:
  customDatapowerConfig:
  replicaCount: 3
  gatewayPeeringLocalPort: 16380
  gatewayPeeringMonitorPort: 26380
  tmsPeeringLocalPort: 16381
  tmsPeeringMonitorPort: 26381
  apiDebugProbePeeringLocalPort: 16382
  apiDebugProbePeeringMonitorPort: 26382
  rlPeeringLocalPort: 16383
  rlPeeringMonitorPort: 26383
  subsPeeringLocalPort: 16384
  subsPeeringMonitorPort: 26384
  apicGatewayServiceLocalPort: 3000
  apicGatewayServiceLocalAddress: 0.0.0.0
  apicGatewayServiceTLSSecret:
  # This value should either be 'enabled' or 'disabled'. Default is disabled
  apiDebugProbe: "disabled"
  apiDebugProbeMaxRecords: 1000
  # api-debugprobe expiration in minutes
  apiDebugProbeExpiration: 60
  # This value should either be 'on' or 'off'. Default is 'on'
  apicGatewayServiceV5CompatibilityMode: "on"
  apiGatewayLocalAddress: 0.0.0.0
  apiGatewayLocalPort: 9443
  configSequenceInterval:
  # Gateway MGMT variables
  # This value should either be 'enabled' or 'disabled'. Default is disabled
  webGuiManagementState: "disabled"
  webGuiManagementPort: 9090
  webGuiManagementLocalAddress: 0.0.0.0
  # This value should either be 'enabled' or 'disabled'. Default is disabled
  gatewaySshState: "disabled"
  gatewaySshPort: 9022
  gatewaySshLocalAddress: 0.0.0.0
  # This value should either be 'enabled' or 'disabled'. Default is disabled
  restManagementState: "disabled"
  restManagementPort: 5554
  restManagementLocalAddress: 0.0.0.0
  xmlManagementLocalAddress: 0.0.0.0
  xmlManagementLocalPort: 5550
  # This value should either be 'enabled' or 'disabled'. Default is enabled
  snmpState: "enabled"
  snmpLocalAddress: 0.0.0.0
  snmpPort: 1161
  flexpointBundle:
  storage:
    tmsPeering:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
  resources:
    requests:
      memory: 8Gi
      # cpu should agree with .Values.datapower.env.workerThreads
      cpu: 8
    limits:
      memory: 8Gi
      cpu: 8
service:
  type: ClusterIP


#-----------------------------------------------------------------------------
# DataPower Monitor Section
#
datapowerMonitor:
  livenessPort: 8080
  env:
    lifecycleDebounceMs: 10000
    peeringRecoveryCheckIntervalMs: 1000
  image:
    repository:
    tag:
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "250m"


#-----------------------------------------------------------------------------
# Ingress Section
#

# This value can be ingress or route
ingressType: "ingress"
ingress:
  gateway:
    enabled: true
    enableTLS: false
    hosts:
    - name: gateway.example.com
      # secretName: chart-example-tls
    annotations:
  gwd:
    enabled: true
    enableTLS: false
    hosts:
    - name: gwd.example.com
    annotations:



#-----------------------------------------------------------------------------
# Open Tracing Section
#
odTracing:
  enabled: "false"
  pullPolicy: "IfNotPresent"
  pullSecret:
  # od manager FQDN : icp4i-od.<od manager namespace>.svc.cluster.local
  odTracingRegistrationHostname: icp4i-od.tracing.svc
  # od Store (elasticsearch) FQDN : icp4i-od.<od manager namespace>.svc.cluster.local
  odTracingDataHostname: od-store-od.tracing.svc
  imageAgent: ibmcom/icp4i_od_agent:1.0.0-amd64
  imageCollector: ibmcom/icp4i_od_collector:1.0.0-amd64
  collector:
    livenessProbe:
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3

    readinessProbe:
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3

  agent:
    livenessProbe:
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3

    readinessProbe:
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3

